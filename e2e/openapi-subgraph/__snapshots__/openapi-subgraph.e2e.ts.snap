// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`openapi-subgraph generates a subgraph SDL from an OpenAPI spec 1`] = `
"schema @link(url: "https://specs.apollo.dev/link/v1.0") @link(url: "https://specs.apollo.dev/federation/v2.3", import: ["@key", "@composeDirective"]) @link(url: "https://the-guild.dev/graphql/mesh/spec/v1.0", import: ["@merge", "@statusCodeTypeName", "@httpOperation", "@transport", "@source", "@extraSchemaDefinitionDirective"]) @composeDirective(name: "@merge") @composeDirective(name: "@statusCodeTypeName") @composeDirective(name: "@httpOperation") @composeDirective(name: "@transport") @composeDirective(name: "@source") @composeDirective(name: "@extraSchemaDefinitionDirective") {
  query: Query
}

directive @statusCodeTypeName(subgraph: String, typeName: String, statusCode: String) repeatable on UNION

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean, queryStringOptions: ObjMap) repeatable on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]]) repeatable on SCHEMA

directive @merge(subgraph: String!, argsExpr: String, keyArg: String, keyField: String, key: [String], additionalArgs: String) repeatable on FIELD_DEFINITION

type Query @extraSchemaDefinitionDirective(directives: {transport: [{subgraph: "Test", kind: "rest", location: "http://localhost:<Test_port>"}]}) {
  users: [User] @httpOperation(subgraph: "Test", path: "/users", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET)
  user(id: String!): user_response @httpOperation(subgraph: "Test", path: "/users/{args.id}", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @merge(subgraph: "Test", keyField: "id", keyArg: "id")
}

type User @key(fields: "id") {
  id: String!
  name: String!
}

union user_response @statusCodeTypeName(subgraph: "Test", statusCode: "200", typeName: "User") @statusCodeTypeName(subgraph: "Test", statusCode: "404", typeName: "user_404_response") = User | user_404_response

type user_404_response {
  message: String!
}

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}

scalar ObjMap

directive @source(name: String!, type: String, subgraph: String!) repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

scalar _DirectiveExtensions

directive @extraSchemaDefinitionDirective(directives: _DirectiveExtensions) repeatable on OBJECT
"
`;
