diff --git a/build/esm/transport/http-exporter-transport.js b/build/esm/transport/http-exporter-transport.js
index ef266685d979dc9112b3d5aa4c39b580be0cf1aa..47f7cfaa2f347f22c284fdae61250fe413aba5fc 100644
--- a/build/esm/transport/http-exporter-transport.js
+++ b/build/esm/transport/http-exporter-transport.js
@@ -13,75 +13,49 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-var __generator = (this && this.__generator) || function (thisArg, body) {
-    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
-    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
-    function verb(n) { return function (v) { return step([n, v]); }; }
-    function step(op) {
-        if (f) throw new TypeError("Generator is already executing.");
-        while (_) try {
-            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
-            if (y = 0, t) op = [op[0] & 2, t.value];
-            switch (op[0]) {
-                case 0: case 1: t = op; break;
-                case 4: _.label++; return { value: op[1], done: false };
-                case 5: _.label++; y = op[1]; op = [0]; continue;
-                case 7: op = _.ops.pop(); _.trys.pop(); continue;
-                default:
-                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
-                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
-                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
-                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
-                    if (t[2]) _.ops.pop();
-                    _.trys.pop(); continue;
-            }
-            op = body.call(thisArg, _);
-        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
-        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
-    }
-};
-var HttpExporterTransport = /** @class */ (function () {
-    function HttpExporterTransport(_parameters) {
-        this._parameters = _parameters;
-        this._send = null;
-        this._agent = null;
+class HttpExporterTransport {
+  constructor(_parameters) {
+    this._parameters = _parameters;
+    this._send = null;
+    this._agent = null;
+  }
+  async send(data, timeoutMillis) {
+    if (this._send == null) {
+      // Lazy require to ensure that http/https is not required before instrumentations can wrap it.
+      const {
+        sendWithHttp,
+        createHttpAgent,
+        // eslint-disable-next-line @typescript-eslint/no-var-requires
+      } = await import("./http-transport-utils");
+      this._agent = createHttpAgent(
+        this._parameters.url,
+        this._parameters.agentOptions
+      );
+      this._send = sendWithHttp;
     }
-    HttpExporterTransport.prototype.send = function (data, timeoutMillis) {
-        return __awaiter(this, void 0, void 0, function () {
-            var _a, sendWithHttp, createHttpAgent;
-            var _this = this;
-            return __generator(this, function (_b) {
-                if (this._send == null) {
-                    _a = require('./http-transport-utils'), sendWithHttp = _a.sendWithHttp, createHttpAgent = _a.createHttpAgent;
-                    this._agent = createHttpAgent(this._parameters.url, this._parameters.agentOptions);
-                    this._send = sendWithHttp;
-                }
-                return [2 /*return*/, new Promise(function (resolve) {
-                        var _a;
-                        // this will always be defined
-                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-                        (_a = _this._send) === null || _a === void 0 ? void 0 : _a.call(_this, _this._parameters, _this._agent, data, function (result) {
-                            resolve(result);
-                        }, timeoutMillis);
-                    })];
-            });
-        });
-    };
-    HttpExporterTransport.prototype.shutdown = function () {
-        // intentionally left empty, nothing to do.
-    };
-    return HttpExporterTransport;
-}());
+    return new Promise((resolve) => {
+      var _a;
+      // this will always be defined
+      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+      (_a = this._send) === null || _a === void 0
+        ? void 0
+        : _a.call(
+            this,
+            this._parameters,
+            this._agent,
+            data,
+            (result) => {
+              resolve(result);
+            },
+            timeoutMillis
+          );
+    });
+  }
+  shutdown() {
+    // intentionally left empty, nothing to do.
+  }
+}
 export function createHttpExporterTransport(parameters) {
-    return new HttpExporterTransport(parameters);
+  return new HttpExporterTransport(parameters);
 }
 //# sourceMappingURL=http-exporter-transport.js.map
\ No newline at end of file
diff --git a/build/esnext/transport/http-exporter-transport.js b/build/esnext/transport/http-exporter-transport.js
index e6b76f301baeb19f507b6072c0598e1d98ceebbb..32a62444cf4ef7ab2346df5b0ac2fb079c6b4268 100644
--- a/build/esnext/transport/http-exporter-transport.js
+++ b/build/esnext/transport/http-exporter-transport.js
@@ -24,7 +24,7 @@ class HttpExporterTransport {
             // Lazy require to ensure that http/https is not required before instrumentations can wrap it.
             const { sendWithHttp, createHttpAgent,
             // eslint-disable-next-line @typescript-eslint/no-var-requires
-             } = require('./http-transport-utils');
+             } = await import('./http-transport-utils');
             this._agent = createHttpAgent(this._parameters.url, this._parameters.agentOptions);
             this._send = sendWithHttp;
         }
