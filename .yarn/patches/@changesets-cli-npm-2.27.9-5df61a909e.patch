diff --git a/dist/changesets-cli.cjs.js b/dist/changesets-cli.cjs.js
index 986fdf27f1d85412f8a6b2f5cc026d811ea04372..1f9ce913c42e765c860ca97fff670c2f96c928fb 100644
--- a/dist/changesets-cli.cjs.js
+++ b/dist/changesets-cli.cjs.js
@@ -666,32 +666,6 @@ function getCorrectRegistry(packageJson) {
   return !registry || registry === "https://registry.yarnpkg.com" ? "https://registry.npmjs.org" : registry;
 }
 
-async function getPublishTool(cwd) {
-  const pm = await packageManagerDetector.detect({
-    cwd
-  });
-  if (!pm || pm.name !== "pnpm") return {
-    name: "npm"
-  };
-
-  try {
-    let result = await spawn__default["default"]("pnpm", ["--version"], {
-      cwd
-    });
-    let version = result.stdout.toString().trim();
-    let parsed = semverParse__default["default"](version);
-    return {
-      name: "pnpm",
-      shouldAddNoGitChecks: (parsed === null || parsed === void 0 ? void 0 : parsed.major) === undefined ? false : parsed.major >= 5
-    };
-  } catch (e) {
-    return {
-      name: "pnpm",
-      shouldAddNoGitChecks: false
-    };
-  }
-}
-
 async function getTokenIsRequired() {
   // Due to a super annoying issue in yarn, we have to manually override this env variable
   // See: https://github.com/yarnpkg/yarn/issues/2935#issuecomment-355292633
@@ -783,7 +757,6 @@ let getOtpCode = async twoFactorState => {
 // the call being wrapped in the npm request limit and causing the publishes to potentially never run
 
 async function internalPublish(pkgName, opts, twoFactorState) {
-  let publishTool = await getPublishTool(opts.cwd);
   let publishFlags = opts.access ? ["--access", opts.access] : [];
   publishFlags.push("--tag", opts.tag);
 
@@ -792,9 +765,7 @@ async function internalPublish(pkgName, opts, twoFactorState) {
     publishFlags.push("--otp", otpCode);
   }
 
-  if (publishTool.name === "pnpm" && publishTool.shouldAddNoGitChecks) {
-    publishFlags.push("--no-git-checks");
-  } // Due to a super annoying issue in yarn, we have to manually override this env variable
+  // Due to a super annoying issue in yarn, we have to manually override this env variable
   // See: https://github.com/yarnpkg/yarn/issues/2935#issuecomment-355292633
 
 
@@ -805,11 +776,9 @@ async function internalPublish(pkgName, opts, twoFactorState) {
     code,
     stdout,
     stderr
-  } = publishTool.name === "pnpm" ? await spawn__default["default"]("pnpm", ["publish", "--json", ...publishFlags], {
+  } = await spawn__default["default"]("yarn", ["npm", "publish", ...publishFlags], {
     env: Object.assign({}, process.env, envOverride),
     cwd: opts.cwd
-  }) : await spawn__default["default"](publishTool.name, ["publish", opts.publishDir, "--json", ...publishFlags], {
-    env: Object.assign({}, process.env, envOverride)
   });
 
   if (code !== 0) {
diff --git a/dist/changesets-cli.esm.js b/dist/changesets-cli.esm.js
index f0c19f8f1130425be51c04743abd9f8f078ea840..976a84000179394fff29a180c4de63c67d565154 100644
--- a/dist/changesets-cli.esm.js
+++ b/dist/changesets-cli.esm.js
@@ -628,32 +628,6 @@ function getCorrectRegistry(packageJson) {
   return !registry || registry === "https://registry.yarnpkg.com" ? "https://registry.npmjs.org" : registry;
 }
 
-async function getPublishTool(cwd) {
-  const pm = await detect({
-    cwd
-  });
-  if (!pm || pm.name !== "pnpm") return {
-    name: "npm"
-  };
-
-  try {
-    let result = await spawn$1("pnpm", ["--version"], {
-      cwd
-    });
-    let version = result.stdout.toString().trim();
-    let parsed = semverParse(version);
-    return {
-      name: "pnpm",
-      shouldAddNoGitChecks: (parsed === null || parsed === void 0 ? void 0 : parsed.major) === undefined ? false : parsed.major >= 5
-    };
-  } catch (e) {
-    return {
-      name: "pnpm",
-      shouldAddNoGitChecks: false
-    };
-  }
-}
-
 async function getTokenIsRequired() {
   // Due to a super annoying issue in yarn, we have to manually override this env variable
   // See: https://github.com/yarnpkg/yarn/issues/2935#issuecomment-355292633
@@ -745,7 +719,6 @@ let getOtpCode = async twoFactorState => {
 // the call being wrapped in the npm request limit and causing the publishes to potentially never run
 
 async function internalPublish(pkgName, opts, twoFactorState) {
-  let publishTool = await getPublishTool(opts.cwd);
   let publishFlags = opts.access ? ["--access", opts.access] : [];
   publishFlags.push("--tag", opts.tag);
 
@@ -754,9 +727,7 @@ async function internalPublish(pkgName, opts, twoFactorState) {
     publishFlags.push("--otp", otpCode);
   }
 
-  if (publishTool.name === "pnpm" && publishTool.shouldAddNoGitChecks) {
-    publishFlags.push("--no-git-checks");
-  } // Due to a super annoying issue in yarn, we have to manually override this env variable
+  // Due to a super annoying issue in yarn, we have to manually override this env variable
   // See: https://github.com/yarnpkg/yarn/issues/2935#issuecomment-355292633
 
 
@@ -767,11 +738,9 @@ async function internalPublish(pkgName, opts, twoFactorState) {
     code,
     stdout,
     stderr
-  } = publishTool.name === "pnpm" ? await spawn$1("pnpm", ["publish", "--json", ...publishFlags], {
+  } = await spawn$1("yarn", ["npm", "publish", ...publishFlags], {
     env: Object.assign({}, process.env, envOverride),
     cwd: opts.cwd
-  }) : await spawn$1(publishTool.name, ["publish", opts.publishDir, "--json", ...publishFlags], {
-    env: Object.assign({}, process.env, envOverride)
   });
 
   if (code !== 0) {
