diff --git a/build/esnext/detectors/platform/node/machine-id/getMachineId.js b/build/esnext/detectors/platform/node/machine-id/getMachineId.js
index 6600fb658cb3330dde569141fafd51c9b2f215e1..fc6d07470edcdd36e2895bfd6f20ecb94275a799 100644
--- a/build/esnext/detectors/platform/node/machine-id/getMachineId.js
+++ b/build/esnext/detectors/platform/node/machine-id/getMachineId.js
@@ -13,23 +13,28 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-import * as process from 'process';
-let getMachineId;
-switch (process.platform) {
-    case 'darwin':
-        ({ getMachineId } = require('./getMachineId-darwin'));
-        break;
-    case 'linux':
-        ({ getMachineId } = require('./getMachineId-linux'));
-        break;
-    case 'freebsd':
-        ({ getMachineId } = require('./getMachineId-bsd'));
-        break;
-    case 'win32':
-        ({ getMachineId } = require('./getMachineId-win'));
-        break;
+export function getMachineId(...args) {
+  switch (process.platform) {
+    case "darwin":
+      return import("./getMachineId-darwin").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "linux":
+      return import("./getMachineId-linux").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "freebsd":
+      return import("./getMachineId-bsd").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "win32":
+      return import("./getMachineId-win").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
     default:
-        ({ getMachineId } = require('./getMachineId-unsupported'));
+      return import("./getMachineId-unsupported").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+  }
 }
-export { getMachineId };
 //# sourceMappingURL=getMachineId.js.map
diff --git a/build/src/detectors/platform/node/machine-id/getMachineId.js b/build/src/detectors/platform/node/machine-id/getMachineId.js
index 9c1877c31fda380b7c6e64491400972fb8dc297c..8ddfff3c832abd65bde91f09c4ef93016b738219 100644
--- a/build/src/detectors/platform/node/machine-id/getMachineId.js
+++ b/build/src/detectors/platform/node/machine-id/getMachineId.js
@@ -16,23 +16,28 @@ exports.getMachineId = void 0;
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-const process = require("process");
-let getMachineId;
-exports.getMachineId = getMachineId;
-switch (process.platform) {
-    case 'darwin':
-        (exports.getMachineId = getMachineId = require('./getMachineId-darwin').getMachineId);
-        break;
-    case 'linux':
-        (exports.getMachineId = getMachineId = require('./getMachineId-linux').getMachineId);
-        break;
-    case 'freebsd':
-        (exports.getMachineId = getMachineId = require('./getMachineId-bsd').getMachineId);
-        break;
-    case 'win32':
-        (exports.getMachineId = getMachineId = require('./getMachineId-win').getMachineId);
-        break;
+exports.getMachineId = function getMachineId(...args) {
+  switch (process.platform) {
+    case "darwin":
+      return import("./getMachineId-darwin").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "linux":
+      return import("./getMachineId-linux").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "freebsd":
+      return import("./getMachineId-bsd").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+    case "win32":
+      return import("./getMachineId-win").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
     default:
-        (exports.getMachineId = getMachineId = require('./getMachineId-unsupported').getMachineId);
+      return import("./getMachineId-unsupported").then(({ getMachineId }) =>
+        getMachineId(...args)
+      );
+  }
 }
 //# sourceMappingURL=getMachineId.js.map
\ No newline at end of file
diff --git a/package.json b/package.json
index 6a4170da17a23b3d4969fc12412f26d6f7df83ef..b856e274838fbbd67d7a4f6b31346072f737b026 100644
--- a/package.json
+++ b/package.json
@@ -3,15 +3,15 @@
   "version": "2.0.0",
   "description": "OpenTelemetry SDK resources",
   "main": "build/src/index.js",
-  "module": "build/esm/index.js",
+  "module": "build/esnext/index.js",
   "esnext": "build/esnext/index.js",
   "browser": {
     "./src/platform/index.ts": "./src/platform/browser/index.ts",
-    "./build/esm/platform/index.js": "./build/esm/platform/browser/index.js",
+    "./build/esm/platform/index.js": "./build/esnext/platform/browser/index.js",
     "./build/esnext/platform/index.js": "./build/esnext/platform/browser/index.js",
     "./build/src/platform/index.js": "./build/src/platform/browser/index.js",
     "./src/detectors/platform/index.ts": "./src/detectors/platform/browser/index.ts",
-    "./build/esm/detectors/platform/index.js": "./build/esm/detectors/platform/browser/index.js",
+    "./build/esm/detectors/platform/index.js": "./build/esnext/detectors/platform/browser/index.js",
     "./build/esnext/detectors/platform/index.js": "./build/esnext/detectors/platform/browser/index.js",
     "./build/src/detectors/platform/index.js": "./build/src/detectors/platform/browser/index.js"
   },
